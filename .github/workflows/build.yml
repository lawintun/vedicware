name: Android APK Build

on:
  push:
    branches:
      - main  # Adjust this if you're using a different branch
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'
    
    - name: Install Buildozer and Dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip openjdk-8-jdk unzip zlib1g-dev wget
        pip install --upgrade pip setuptools
        pip install cython==0.29.19
        pip install buildozer

    - name: Install Android SDK Command Line Tools
      run: |
        mkdir -p $HOME/.android/cmdline-tools/latest
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip commandlinetools-linux-9477386_latest.zip -d $HOME/.android/cmdline-tools/latest
        rm commandlinetools-linux-9477386_latest.zip
        echo "export ANDROID_HOME=$HOME/.android" >> $GITHUB_ENV
        echo "export PATH=\$ANDROID_HOME/cmdline-tools/latest/bin:\$PATH" >> $GITHUB_ENV
        
    - name: Accept Licenses and Install SDK Components
      run: |
        source $GITHUB_ENV
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "platforms;android-30" "build-tools;30.0.3" "extras;google;m2repository" "extras;android;m2repository"

    - name: Install dependencies from requirements.txt
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Build APK
      run: |
        buildozer android debug
        mkdir -p output_apk
        cp bin/*.apk output_apk/

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v3
      with:
        name: vedicware-apk
        path: output_apk/
